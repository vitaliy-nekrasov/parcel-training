{"mappings":"CA6GAA,eAA6BC,GAC3B,IACE,MAAMC,EAAM,mDAGZ,aADuBC,MAAM,GAAGD,mDAA+BD,MAC/CG,M,CAChB,MAAOC,GAE+BC,QAA9BD,MAAMA,E,GAiBlBE,CAAc,GAAGC,MAAKC,IAAA,IAbtBT,eAAgCU,GAC9B,IAEE,MAAMR,EAAM,sCAGZ,aADuBC,MAAM,GAAGD,IAAMQ,sDACtBN,M,CAChB,MAAOC,GAE+BC,QAA9BD,MAAMA,E,EAQlBM,CAAiB,QAAQH,MAAKC,IAAA,IA2G9B,SAASG,EAAYC,GACnB,MAAMC,EAAM,GACZ,IAAKC,MAAMF,EACS,iBAAPE,IACTD,EAAIE,KAAKD,IAGb,OAAOD,C,CA9GMG,SAASC,cAAc,QAI/BC,mBAAmB,WAFf,qOAgELC,OAACC,UAAUC,YAAc,SAAUC,GAGvC,OAFYA,EAAIC,MAAM,KACHC,KAAIC,GAAQA,EAAKC,QAAQD,EAAK,GAAIA,EAAK,GAAGE,iBAC/CC,KAAK,I,EA4CrBvB,QAAQwB,IAAIlB,EAAY,CAAC,EAAG,EAAG,IAAK,OACpCN,QAAQwB,IAAIlB,EAAY,CAAC,EAAG,IAAK,IAAK,EAAG,MACzCN,QAAQwB,IAAIlB,EAAY,CAAC,EAAG,EAAG,OAAQ,IAAK,MAAO","sources":["src/index.js"],"sourcesContent":["// const API_KEY = '1c308592d719c7668d47adc63622f209';\n// const optionsTrending = `trending/movie/week`;\n// const BASE_URL = `https://api.themoviedb.org/3/${optionsTrending}?api_key=${API_KEY}`;\n\n// const result = fetch(BASE_URL)\n//   .then(response => {\n//     return response.json();\n//   })\n//   .then(({ results }) => {\n//     return results;\n//   });\n\n// const imgEl = document.querySelector('img');\n// const nameEl = document.querySelector('.name');\n// const filmEl = document.querySelector('.film');\n// const numberEl = document.querySelector('.number');\n// const headerEl = document.querySelector('header');\n\n// result\n//   .then(result => {\n//     const id = result[0].id;\n//     return id;\n//   })\n//   .then(id => {\n//     fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n//       .then(response => {\n//         return response.json();\n//       })\n//       .then(data => {\n//         console.log(data);\n//         imgEl.setAttribute(\n//           'src',\n//           `https://image.tmdb.org/t/p/w400${data.poster_path}`\n//         );\n//         nameEl.textContent = `${data.original_title}`;\n//         const genres = data.genres;\n//         const array = [];\n//         genres.forEach(element => {\n//           array.push(element.name);\n//         });\n//         const string = array.join(', ');\n//         const year = data.release_date;\n//         filmEl.textContent = string + ' ' + year.slice(0, 4);\n//         const vote = data.vote_average;\n//         numberEl.textContent = vote.toFixed(1);\n//       });\n//   });\n\n// function createMarkup(array) {\n//   const markup = array.map(film => {\n//     const markupString = `<img src=\"https://image.tmdb.org/t/p/w400${film.poster_path}\" alt=\"\" width=\"395\" height=\"574\" />\n// <p class=\"name\">${film.original_title}</p>\n// <p class=\"film\"></p>\n// <p class=\"number\">${film.vote_average}</p>`;\n//     return markupString;\n//   });\n//   return markup.join(' ');\n// }\n\n// result.then(result => {\n//   result.map(film =>\n//     fetch(`https://api.themoviedb.org/3/movie/${film.id}?api_key=${API_KEY}`)\n//       .then(response => {\n//         return response.json();\n//       })\n//       .then(film => {\n//         mark(film);\n//       })\n//   );\n// });\n\n// function mark(film) {\n//   const genres = film.genres;\n//   const array = [];\n//   genres.forEach(element => {\n//     array.push(element.name);\n//   });\n//   const string = array.join(', ');\n//   const year = film.release_date.slice(0, 4);\n//   const markupString = `<img src=\"https://image.tmdb.org/t/p/w400${\n//     film.poster_path\n//   }\" alt=\"\" width=\"395\" height=\"574\" />\n// <p class=\"name\">${film.original_title}</p>\n// <p class=\"film\">${string} ${year}</p>\n// <p class=\"number\">${film.vote_average.toFixed(1)}</p>`;\n//   console.log(markupString);\n//   headerEl.insertAdjacentHTML('beforeend', markupString);\n// }\n\n// const API_KEY = '1c5c067e324c39f9223ad13ef9891a0a';\n\n// async function fetchTrending(page) {\n//   try {\n//     const URL = 'https://www.googleapis.com/youtube/v3';\n\n//     const response = await fetch(`${URL}`);\n//     return response.json();\n//   } catch (error) {\n//     // обработка ошибки получения данных с бэкэнда\n//     console.error(error);\n//   }\n// }\n\n// fetchTrending(2).then(result => {\n//   console.log(result.results[0].video);\n// });\n\nconst API_KEY = '1c5c067e324c39f9223ad13ef9891a0a';\n\nasync function fetchTrending(page) {\n  try {\n    const URL = 'https://api.themoviedb.org/3/trending/movie/week';\n\n    const response = await fetch(`${URL}?api_key=${API_KEY}&page=${page}`);\n    return response.json();\n  } catch (error) {\n    // обработка ошибки получения данных с бэкэнда\n    console.error(error);\n  }\n}\n\nasync function fetchTrailerById(filmId) {\n  try {\n    // console.log(filmId);\n    const URL = 'https://api.themoviedb.org/3/movie/';\n\n    const response = await fetch(`${URL}${filmId}/videos?api_key=${API_KEY}`);\n    return response.json();\n  } catch (error) {\n    // обработка ошибки получения данных с бэкэнда\n    console.error(error);\n  }\n}\n\nfetchTrending(1).then(result => {\n  // console.log(result);\n});\n\nfetchTrailerById(894205).then(result => {\n  // console.log(result.results[0]);\n});\n\nconst bodyEl = document.querySelector('body');\n\nlet link = `<iframe width=\"440\" height=\"240\" src='https://www.youtube.com/embed/QjrWxvhDE7I'frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen class=\"trailer_video\"></iframe>`;\n\nbodyEl.insertAdjacentHTML('afterend', link);\n\n// Задача 1\n\nfunction solution(str, ending) {\n  if (str.endsWith(ending)) {\n    return true;\n  }\n  return false;\n}\n\n// console.log(solution('abc', 'bc'));\n// console.log(solution('abc', 'd'));\n\n// Задача 2\n\nfunction maskify(cc) {\n  const newArray = [];\n  if (cc.length > 4) {\n    const replaceNumbers = cc.slice(0, cc.length - 4);\n    const numbersArray = replaceNumbers.split('');\n    for (let i = 0; i < numbersArray.length; i += 1) {\n      const newNumbers = numbersArray[i].replace(numbersArray[i], '#');\n      newArray.push(newNumbers);\n    }\n    const str = newArray.join('');\n    const notReplaceStr = cc.slice(cc.length - 4, cc.length);\n    return str + notReplaceStr;\n  }\n  return cc;\n}\n\n// console.log(maskify('4556364607935616'));\n// console.log(maskify('1'));\n// console.log(maskify('11111'));\n\n// Задача 3\n\nfunction findOdd(A) {\n  const obj = {};\n  for (let i = 0; i < A.length; i += 1) {\n    let num = A[i];\n    if (obj[num]) {\n      obj[num] = obj[num] + 1;\n    } else {\n      obj[num] = 1;\n    }\n  }\n  let r = null;\n  for (let prop in obj) {\n    if (obj[prop] % 2 !== 0) {\n      r = prop;\n    }\n  }\n  return Number(r);\n}\n\n// console.log(findOdd([20, 1, -1, 2, -2, 3, 3, 5, 5, 1, 2, 4, 20, 4, -1, -2, 5]));\n// console.log(findOdd([0, 1, 0, 1, 0]));\n// console.log(findOdd([0]));\n\n// Задача 4\nString.prototype.toJadenCase = function (str) {\n  const arr = str.split(' ');\n  const newArr = arr.map(word => word.replace(word[0], word[0].toUpperCase()));\n  return newArr.join(' ');\n};\n\n// console.log(\n//   String.prototype.toJadenCase(\n//     \"How can mirrors be real if our eyes aren't real\"\n//   )\n// );\n\n// Задача 5\n\nfunction findEvenIndex(arr) {\n  let index = -1;\n  for (var i = 0; i < arr.length; i++) {\n    let start = arr.slice(0, i + 1).reduce((a, b) => a + b, 0);\n    let end = arr.slice(i).reduce((a, b) => a + b, 0);\n    console.log(end);\n    if (start === end) {\n      index = i;\n    }\n    if (start === 0 && end === 0) {\n      index = 4;\n    }\n  }\n  return index;\n}\n\n// console.log('result', findEvenIndex([1, 2, 3, 4, 3, 2, 1]));\n// console.log(findEvenIndex([1, 100, 50, -51, 1, 1]));\n// console.log(findEvenIndex([1, 2, 3, 4, 5, 6]));\n// console.log(findEvenIndex([0, 0, 0, 0, 0]));\n\n// Задача 6\n\nfunction filter_list(l) {\n  const arr = [];\n  for (el of l) {\n    if (typeof el === 'number') {\n      arr.push(el);\n    }\n  }\n  return arr;\n}\n\nconsole.log(filter_list([1, 2, 'a', 'b']));\nconsole.log(filter_list([1, 'a', 'b', 0, 15]));\nconsole.log(filter_list([1, 2, 'aasf', '1', '123', 123]));\n"],"names":["async","page","URL","fetch","json","error","console","$1f0dc3b9307be026$var$fetchTrending","then","result","filmId","$1f0dc3b9307be026$var$fetchTrailerById","$1f0dc3b9307be026$var$filter_list","l","arr","el","push","document","querySelector","insertAdjacentHTML","String","prototype","toJadenCase","str","split","map","word","replace","toUpperCase","join","log"],"version":3,"file":"index.29499723.js.map"}