{"mappings":"AAgNMA,OAACC,UAAUC,YAAc,SAAUC,GAGvC,OAFYA,EAAIC,MAAM,KACHC,KAAIC,GAAQA,EAAKC,QAAQD,EAAK,GAAIA,EAAK,GAAGE,iBAC/CC,KAAK,I","sources":["src/index.js"],"sourcesContent":["// const API_KEY = '1c308592d719c7668d47adc63622f209';\n// const optionsTrending = `trending/movie/week`;\n// const BASE_URL = `https://api.themoviedb.org/3/${optionsTrending}?api_key=${API_KEY}`;\n\n// const result = fetch(BASE_URL)\n//   .then(response => {\n//     return response.json();\n//   })\n//   .then(({ results }) => {\n//     return results;\n//   });\n\n// const imgEl = document.querySelector('img');\n// const nameEl = document.querySelector('.name');\n// const filmEl = document.querySelector('.film');\n// const numberEl = document.querySelector('.number');\n// const headerEl = document.querySelector('header');\n\n// result\n//   .then(result => {\n//     const id = result[0].id;\n//     return id;\n//   })\n//   .then(id => {\n//     fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n//       .then(response => {\n//         return response.json();\n//       })\n//       .then(data => {\n//         console.log(data);\n//         imgEl.setAttribute(\n//           'src',\n//           `https://image.tmdb.org/t/p/w400${data.poster_path}`\n//         );\n//         nameEl.textContent = `${data.original_title}`;\n//         const genres = data.genres;\n//         const array = [];\n//         genres.forEach(element => {\n//           array.push(element.name);\n//         });\n//         const string = array.join(', ');\n//         const year = data.release_date;\n//         filmEl.textContent = string + ' ' + year.slice(0, 4);\n//         const vote = data.vote_average;\n//         numberEl.textContent = vote.toFixed(1);\n//       });\n//   });\n\n// function createMarkup(array) {\n//   const markup = array.map(film => {\n//     const markupString = `<img src=\"https://image.tmdb.org/t/p/w400${film.poster_path}\" alt=\"\" width=\"395\" height=\"574\" />\n// <p class=\"name\">${film.original_title}</p>\n// <p class=\"film\"></p>\n// <p class=\"number\">${film.vote_average}</p>`;\n//     return markupString;\n//   });\n//   return markup.join(' ');\n// }\n\n// result.then(result => {\n//   result.map(film =>\n//     fetch(`https://api.themoviedb.org/3/movie/${film.id}?api_key=${API_KEY}`)\n//       .then(response => {\n//         return response.json();\n//       })\n//       .then(film => {\n//         mark(film);\n//       })\n//   );\n// });\n\n// function mark(film) {\n//   const genres = film.genres;\n//   const array = [];\n//   genres.forEach(element => {\n//     array.push(element.name);\n//   });\n//   const string = array.join(', ');\n//   const year = film.release_date.slice(0, 4);\n//   const markupString = `<img src=\"https://image.tmdb.org/t/p/w400${\n//     film.poster_path\n//   }\" alt=\"\" width=\"395\" height=\"574\" />\n// <p class=\"name\">${film.original_title}</p>\n// <p class=\"film\">${string} ${year}</p>\n// <p class=\"number\">${film.vote_average.toFixed(1)}</p>`;\n//   console.log(markupString);\n//   headerEl.insertAdjacentHTML('beforeend', markupString);\n// }\n\n// const API_KEY = '1c5c067e324c39f9223ad13ef9891a0a';\n\n// async function fetchTrending(page) {\n//   try {\n//     const URL = 'https://www.googleapis.com/youtube/v3';\n\n//     const response = await fetch(`${URL}`);\n//     return response.json();\n//   } catch (error) {\n//     // обработка ошибки получения данных с бэкэнда\n//     console.error(error);\n//   }\n// }\n\n// fetchTrending(2).then(result => {\n//   console.log(result.results[0].video);\n// });\n\n// const API_KEY = '1c5c067e324c39f9223ad13ef9891a0a';\n\n// async function fetchTrending(page) {\n//   try {\n//     const URL = 'https://api.themoviedb.org/3/trending/movie/week';\n\n//     const response = await fetch(`${URL}?api_key=${API_KEY}&page=${page}`);\n//     return response.json();\n//   } catch (error) {\n//     // обработка ошибки получения данных с бэкэнда\n//     console.error(error);\n//   }\n// }\n\n// async function fetchTrailerById(filmId) {\n//   try {\n//     // console.log(filmId);\n//     const URL = 'https://api.themoviedb.org/3/movie/';\n\n//     const response = await fetch(`${URL}${filmId}/videos?api_key=${API_KEY}`);\n//     return response.json();\n//   } catch (error) {\n//     // обработка ошибки получения данных с бэкэнда\n//     console.error(error);\n//   }\n// }\n\n// fetchTrending(1).then(result => {\n//   // console.log(result);\n// });\n\n// fetchTrailerById(894205).then(result => {\n//   // console.log(result.results[0]);\n// });\n\n// const bodyEl = document.querySelector('body');\n\n// let link = `<iframe width=\"440\" height=\"240\" src='https://www.youtube.com/embed/QjrWxvhDE7I'frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen class=\"trailer_video\"></iframe>`;\n\n// bodyEl.insertAdjacentHTML('afterend', link);\n\n// Задача 1\n\nfunction solution(str, ending) {\n  if (str.endsWith(ending)) {\n    return true;\n  }\n  return false;\n}\n\n// console.log(solution('abc', 'bc'));\n// console.log(solution('abc', 'd'));\n\n// Задача 2\n\nfunction maskify(cc) {\n  const newArray = [];\n  if (cc.length > 4) {\n    const replaceNumbers = cc.slice(0, cc.length - 4);\n    const numbersArray = replaceNumbers.split('');\n    for (let i = 0; i < numbersArray.length; i += 1) {\n      const newNumbers = numbersArray[i].replace(numbersArray[i], '#');\n      newArray.push(newNumbers);\n    }\n    const str = newArray.join('');\n    const notReplaceStr = cc.slice(cc.length - 4, cc.length);\n    return str + notReplaceStr;\n  }\n  return cc;\n}\n\n// console.log(maskify('4556364607935616'));\n// console.log(maskify('1'));\n// console.log(maskify('11111'));\n\n// Задача 3\n\nfunction findOdd(A) {\n  const obj = {};\n  for (let i = 0; i < A.length; i += 1) {\n    let num = A[i];\n    if (obj[num]) {\n      obj[num] = obj[num] + 1;\n    } else {\n      obj[num] = 1;\n    }\n  }\n  let r = null;\n  for (let prop in obj) {\n    if (obj[prop] % 2 !== 0) {\n      r = prop;\n    }\n  }\n  return Number(r);\n}\n\n// console.log(findOdd([20, 1, -1, 2, -2, 3, 3, 5, 5, 1, 2, 4, 20, 4, -1, -2, 5]));\n// console.log(findOdd([0, 1, 0, 1, 0]));\n// console.log(findOdd([0]));\n\n// Задача 4\nString.prototype.toJadenCase = function (str) {\n  const arr = str.split(' ');\n  const newArr = arr.map(word => word.replace(word[0], word[0].toUpperCase()));\n  return newArr.join(' ');\n};\n\n// console.log(\n//   String.prototype.toJadenCase(\n//     \"How can mirrors be real if our eyes aren't real\"\n//   )\n// );\n\n// Задача 5\n\nfunction findEvenIndex(arr) {\n  let index = -1;\n  for (var i = 0; i < arr.length; i++) {\n    let start = arr.slice(0, i + 1).reduce((a, b) => a + b, 0);\n    let end = arr.slice(i).reduce((a, b) => a + b, 0);\n    console.log(end);\n    if (start === end) {\n      index = i;\n    }\n    if (start === 0 && end === 0) {\n      index = 4;\n    }\n  }\n  return index;\n}\n\n// console.log('result', findEvenIndex([1, 2, 3, 4, 3, 2, 1]));\n// console.log(findEvenIndex([1, 100, 50, -51, 1, 1]));\n// console.log(findEvenIndex([1, 2, 3, 4, 5, 6]));\n// console.log(findEvenIndex([0, 0, 0, 0, 0]));\n\n// Задача 6\n\nfunction filter_list(l) {\n  const arr = [];\n  for (el of l) {\n    if (typeof el === 'number') {\n      arr.push(el);\n    }\n  }\n  return arr;\n}\n\n// console.log(filter_list([1, 2, 'a', 'b']));\n// console.log(filter_list([1, 'a', 'b', 0, 15]));\n// console.log(filter_list([1, 2, 'aasf', '1', '123', 123]));\n\n// Задача 7\n\nvar number = function (busStops) {\n  let bus = 0;\n  for (let i = 0; i < busStops.length; i += 1) {\n    bus += busStops[i][0] - busStops[i][1];\n  }\n  return bus;\n};\n\n// console.log(\n//   number([\n//     [10, 0],\n//     [3, 5],\n//     [5, 8],\n//   ])\n// );\n\n// Задача 8\n\nfunction high(x) {\n  let al = `abcdefghijklmnopqrstuvwxyz`.split('');\n  let words = x.split(' ');\n  let out = words.map(word => {\n    let score = 0;\n    let letters = word.split('');\n    letters.map(c => {\n      let point = al.indexOf(c) + 1;\n      score += point;\n    });\n    return [word, score];\n  });\n  console.log(out);\n  out = out.sort((a, b) => {\n    if (a[1] > b[1]) return -1;\n    else if (a[1] < b[1]) return 1;\n    else return 0;\n  });\n\n  return out[0][0];\n}\n// console.log(high('man i need a taxi up to ubud'));\n// console.log(high('what time are we climbing up the volcano'));\n// console.log(high('aa b'));\n\n// Задача 9\n\nfunction solution(str) {\n  const arr = str.split('');\n  let begin = -2;\n  let end = 0;\n  let result = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    begin += 2;\n    end += 2;\n    const newArr = arr.slice(begin, end);\n    if (newArr.length === 1) {\n      newArr[1] = '_';\n    }\n    if (newArr.length === 2) {\n      result.push(newArr.join(''));\n    }\n  }\n  return result;\n}\n\n// console.log(solution('abcdef'));\n// console.log(solution('abcdefg'));\n\n// Задача 10\n\nfunction minMinMax(array) {\n  const min = Math.min.apply(null, array);\n  const max = Math.max.apply(null, array);\n  const arr = array.sort((a, b) => b - a).reverse();\n  let num = null;\n  for (let i = 0; i < arr.length; i += 1) {\n    if (!arr.includes(arr[i] + 1)) {\n      num = arr[i] + 1;\n      break;\n    }\n  }\n  return [min, num, max];\n}\n\n// console.log(minMinMax([-1, 4, 5, -23, 24]));\n// console.log(minMinMax([1, 3, -3, -2, 8, -1]));\n// console.log(minMinMax([2, -4, 8, -5, 9, 7]));\n\n// Задача 11\n\nfunction stray(numbers) {\n  const result = numbers.find(\n    number => numbers.indexOf(number) === numbers.lastIndexOf(number)\n  );\n  return result;\n}\n\n// console.log(stray([1, 1, 2]));\n// console.log(stray([1, 2, 1]));\n// console.log(stray([2, 1, 1]));\n\nconst obj = {\n  viktor: ['apple', 'grape', 'orange', 'apple', 'banana'],\n  kate: ['grape', 'orange', 'apple', 'grape', 'banana'],\n};\n\n// function calc(data) {\n//   //получаем значения массивов\n//   const countArray = arr =>\n//     arr.reduce((acc, val) => {\n//       const obj = { ...acc, [val]: (acc[val] || 0) + 1 };\n//       return obj;\n//     }, {});\n//   //получаем значение ключей\n//   const countKeys = o =>\n//     Object.keys(o).reduce(\n//       (acc, key) => ({ ...acc, [key]: countArray(o[key]) }),\n//       {}\n//     );\n//   return countKeys(data);\n// }\n\n// console.log(calc(obj));\n//result of calc method should be equal to\n// {\n//     viktor: {\n//         apple: 2,\n//         grape: 1,\n//         orange: 1,\n//         banana: 1,\n//     },\n//     kate: {\n//         apple: 1,\n//         grape: 2,\n//         orange: 1,\n//         banana: 1,\n//     },\n// }\n\n// Задача 12\n\nfunction tribonacci(signature, n) {\n  let arr = [...signature];\n  for (let i = 0; i < n - 3; i += 1) {\n    arr = [\n      ...arr,\n      arr[arr.length - 1] + arr[arr.length - 2] + arr[arr.length - 3],\n    ];\n  }\n  if (n === 1) {\n    return [arr[0]];\n  }\n  if (n === 2) {\n    return [arr[0], arr[1]];\n  }\n  if (n === 0) {\n    return [];\n  }\n  return arr;\n}\n\n// console.log(tribonacci([1, 1, 1], 10));\n"],"names":["String","prototype","toJadenCase","str","split","map","word","replace","toUpperCase","join"],"version":3,"file":"index.24f767dd.js.map"}